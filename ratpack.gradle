buildscript {
  repositories {
    jcenter()
    gradlePluginPortal()
  }

  dependencies {
    classpath "org.jfrog.buildinfo:build-info-extractor-gradle:2.2.3"

    // Artifactory plugin pulls in very old Guava, which conflicts with child projects.
    // Force to newer version here.
    classpath 'com.google.guava:guava:21.0'

    classpath 'org.apache.commons:commons-lang3:3.6'

    classpath "org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.3.1"
    classpath "com.github.ben-manes:gradle-versions-plugin:0.17.0"
  }
}

allprojects {
  version = "1.8.1-SNAPSHOT"
}

ext {
  isSnapshot = version.endsWith("SNAPSHOT")
  isTravis = System.getenv("TRAVIS") != null
  isDrone = System.getenv("DRONE") != null
  isCodeship = System.getenv("CI_NAME") == "codeship"
  isSnapCi = System.getenv("SNAP_CI") != null
  isAppveyor = System.getenv("APPVEYOR") != null
  isHeroku = System.getenv("HEROKU") != null
  isSemaphore = System.getenv("SEMAPHORE") != null
  isCircleCI = System.getenv("CIRCLECI") != null
  isCloudCi = isTravis || isDrone || isCodeship || isSnapCi || isAppveyor || isSemaphore || isCircleCI
  isCi = isCloudCi

  publishedModules = [
    "ratpack-base",
    "ratpack-consul",
    "ratpack-core",
    "ratpack-dropwizard-metrics",
    "ratpack-exec",
    "ratpack-gradle",
    "ratpack-groovy",
    "ratpack-groovy-test",
    "ratpack-gson",
    "ratpack-guice",
    "ratpack-h2",
    "ratpack-handlebars",
    "ratpack-hikari",
    "ratpack-hystrix",
    "ratpack-jdbc-tx",
    "ratpack-manual",
    "ratpack-newrelic",
    "ratpack-pac4j",
    "ratpack-reactor",
    "ratpack-remote",
    "ratpack-remote-test",
    "ratpack-retrofit2",
    "ratpack-rocker",
    "ratpack-rx", "ratpack-rx2",
    "ratpack-session",
    "ratpack-session-redis",
    "ratpack-spring-boot",
    "ratpack-spring-boot-starter",
    "ratpack-test",
    "ratpack-thymeleaf", "ratpack-thymeleaf3",
  ].collect { project(it) }

  noCodeModules = [
    "ratpack-spring-boot-starter"
  ]

  apiModules = publishedModules.findAll { !(it.name in ["ratpack-manual", "ratpack-gradle", "ratpack-spring-boot-starter", "ratpack-thymeleaf3"]) }
}

def jvmEncoding = java.nio.charset.Charset.defaultCharset().name()
if (jvmEncoding != "UTF-8") {
  throw new IllegalStateException("Build environment must be UTF-8 (it is: $jvmEncoding) - add '-Dfile.encoding=UTF-8' to the GRADLE_OPTS environment variable ")
}

if (!JavaVersion.current().java11Compatible) {
  throw new IllegalStateException("Must be built with Java 11 or higher")
}

gradle.beforeProject {
  it.with {
    group = "io.ratpack"

    apply plugin: "base"
    apply from: "$rootDir/gradle/dependencyRules.gradle"
    apply plugin: "com.github.ben-manes.versions"

    repositories {
      jcenter()
      maven { url 'https://oss.jfrog.org/artifactory/repo' }
    }

    configurations {
      published
    }

    tasks.withType(JavaExec) {
      maxHeapSize = "1g"
    }

    tasks.register("sanityCheck")

    apply from: "$rootDir/gradle/ratpackLocal.gradle"
    if (project in publishedModules) {
      apply from: "$rootDir/gradle/publish-module.gradle"
    }
  }
}

apply from: "gradle/idea.gradle"
apply from: "gradle/publish.gradle"
apply from: "gradle/dependencies.gradle"
apply from: "gradle/coveralls.gradle"
